


# let lib get libreria
# var asd=123
# var dsa=321.32
# var hjk=23.23e23
# asd=23
# fn f1(n1,n2)->num:
#   << n1+n2
# ;
# #comentario
#
# def v1:num=f1(4,6)
#
# var n=5
# @>comentar
#
#
# io<@
# if n>=2.45 :
#   lib.print("mayor que\" dos")
# :if(n<0):
#   lib.print('menor que 0')

# :

#   lib.print("entre 0 y 2"
#programa
#importacion

#  gets :>

#   get libreria Nombre;
#   get  otralibreria;
# ;;
# # #room

#room Cuarto;
#  modules:>
#       mod UnaClase(clasePadre):>
#     #constructor
#         make (var sdf:num =0):>

#             asd=789;
#             fksj=asd;
#         ;;
#         destructor
#         umake:>
#             ###
#         ;;
#      ;;
# ;;

# fns:>
#     fn funcion(var x1:num)->num:>
#         x1=34;
#     ;;
#     fn funcion2(var x1:num)->num:>
        # x1=34;
    # ;;
# ;;
 main:>

     var asd:num=45+78.12;
     var asd2:num=7;
#      #declarar variable;
# def variable:int=123;
# var variable2:string='texto 1';
# def varible3:int=34;
# #asignacion
# variable=10;
#   #if
# if variable>variable3:>
#     asd=123;
#     if variable>variable3:>
#     asd=123;
#     ;;

# # #else if
# ?: variable==variable3:>
#   asd=13;
# ;;
# # #else
#  nif:>
#  asd=543;
# ;;
# loop var i:num in 1...10:>
#     #print(i);
#     var f:num =678;
# ;;
# tloop var i:num=0;i<10;i++:
#     #print(i);
#     next;
# ;;
# cloop true:
#     #print('un ciclo');
# ;;
# cloop true ->:
#     #print('un ciclo do');
# ;;
# router variable:
#     port 'asd','asd','asd':
#         #print(variable);
#         ;;
#     port 123:
#         #print("numero");
#         ;;
#     notport:
#         #print("otra cosa");
#         ;;
# ;;
# signal evento ['unaFuncion','otraFuncion'];
# #emitir evento;
# emit evento;
# array miArrar:num = [123,123,123];
# list lista:num=[123,123,123,123];
#     # asd=345
#     # if asd<123:
#     #     asd=0
#     # ;;
#;;
